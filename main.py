import os
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# üîê –¢–≤–æ—ó —Ç–æ–∫–µ–Ω–∏
TELEGRAM_TOKEN = os.getenv("BOT_TOKEN")  # –≤—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω —Å—é–¥–∏, —è–∫—â–æ –Ω–µ —á–µ—Ä–µ–∑ env
ALERTS_TOKEN = os.getenv("ALERTS_TOKEN")  # —Ç–æ–∫–µ–Ω –∑ alerts.in.ua

API_URL = "https://api.alerts.in.ua/v1/alerts/active.json"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç üå∏\n–ù–∞–ø–∏—à–∏ ¬´–©–æ –ø–æ –æ–±–ª–∞—Å—Ç—ñ¬ª —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å, –¥–µ –∑–∞—Ä–∞–∑ —Ç—Ä–∏–≤–æ–≥–∞ –≤ –ö–∏—ó–≤—Å—å–∫—ñ–π –æ–±–ª–∞—Å—Ç—ñ.")

async def oblast_alerts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    headers = {"Authorization": f"Bearer {ALERTS_TOKEN}"}
    try:
        response = requests.get(API_URL, headers=headers, timeout=10)
        data = response.json()

        kyiv_alerts = [
            alert for alert in data.get("alerts", [])
            if alert.get("location_oblast") == "–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å"
        ]

        if not kyiv_alerts:
            await update.message.reply_text("‚úÖ –£ –ö–∏—ó–≤—Å—å–∫—ñ–π –æ–±–ª–∞—Å—Ç—ñ –∑–∞—Ä–∞–∑ —Ç–∏—Ö–æ.")
            return

        text = "üö® *–ê–∫—Ç–∏–≤–Ω—ñ —Ç—Ä–∏–≤–æ–≥–∏ —É –ö–∏—ó–≤—Å—å–∫—ñ–π –æ–±–ª–∞—Å—Ç—ñ:*\n"
        for alert in kyiv_alerts:
            raion = alert.get("location_title", "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ä–∞–π–æ–Ω")
            alert_type = alert.get("alert_type", "–Ω–µ–≤—ñ–¥–æ–º–æ")
            text += f"‚Ä¢ {raion} ‚Äî {alert_type}\n"

        await update.message.reply_markdown(text)

    except Exception as e:
        await update.message.reply_text(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö: {e}")

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("(?i)—â–æ –ø–æ –æ–±–ª–∞—Å—Ç—ñ"), oblast_alerts))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()

if __name__ == "__main__":
    main()
